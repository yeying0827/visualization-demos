import{_ as D,l as g,f as C,m as x,s as m,u as p,v,o as _,c as f,b as l,F as w,h as B,q as b,n as F,t as S,p as R,a as T}from"./index-g0v-nOv3.js";import{t as k,s as j,b as q,c as I}from"./color-matrix-ThnoXl7S.js";const z=n=>(R("data-v-754cb8d6"),n=n(),T(),n),E=z(()=>l("h3",null,"滤镜函数使用",-1)),L=["onClick"],M={__name:"Filters",setup(n){const y=[{name:"滤镜函数：channel"},{name:"滤镜函数：叠加使用"}],s=g(0),e=g(null);let r;C(()=>{r=e.value.getContext("2d"),h(s.value),x(s,()=>{h(s.value)})});const h=d=>{switch(d){case 0:console.log("case 0"),async function(){const c=await m(b),a=p(c);v(a,({r:t,g:o,b:i,a:u})=>k([t,o,i,u],I({r:1.5,g:.75}))),e.value.width=a.width,e.value.height=a.height,r.putImageData(a,0,0)}();break;case 1:console.log("case 1"),async function(){const c=await m(b),a=p(c);v(a,({r:t,g:o,b:i,a:u})=>k([t,o,i,u],I({r:1.2}),q(1.2),j(1.2))),e.value.width=a.width,e.value.height=a.height,r.putImageData(a,0,0)}();break}};return(d,c)=>(_(),f(w,null,[E,l("div",null,[(_(),f(w,null,B(y,(a,t)=>l("span",{class:F(["filter-type",{active:s.value===t}]),onClick:o=>s.value=t},S(a.name),11,L)),64))]),l("canvas",{ref_key:"canvasRef",ref:e,width:"0",height:"0"},null,512)],64))}},$=D(M,[["__scopeId","data-v-754cb8d6"]]);export{$ as default};
