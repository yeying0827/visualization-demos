function j(t){const n=new Image;return n.crossOrigin="anonymous",new Promise(o=>{n.onload=()=>{o(n)},n.src=t})}const m=new WeakMap;function k(t,n=[0,0,t.width,t.height]){let o;return m.has(t)?o=m.get(t):(o=new OffscreenCanvas(t.width,t.height).getContext("2d"),o.drawImage(t,0,0),m.set(t,o)),o.getImageData(...n)}function w(t,n){const{width:o,height:a,data:f}=t;for(let e=0;e<o*a*4;e+=4){const[r,c,g,l]=n({r:f[e]/255,g:f[e+1]/255,b:f[e+2]/255,a:f[e+3]/255,index:e,width:o,height:a,x:e/4%o/o,y:Math.floor(e/4/o)/a});f.set([r,c,g,l].map(h=>Math.round(h*255)),e)}return t}function v(t,n){const{data:o}=t,a=o[n]/255,f=o[n+1]/255,e=o[n+2]/255,r=o[n+3]/255;return[a,f,e,r]}function C(t,n,o){const{width:a,height:f}=t;if(n<0||o<0||n>=1||o>=1)return null;n=Math.floor(a*n),o=Math.floor(f*o);const e=4*(o*a+n);return v(t,e)}function P(t,n=t/3){const o=1/(Math.sqrt(2*Math.PI)*n),a=-1/(2*n**2);let f=0;const e=[];for(let r=-t;r<=t;r++){const c=o*Math.exp(a*r**2);e.push(c),f+=c}for(let r=0,c=e.length;r<c;r++)e[r]/=f;return{matrix:e,sum:f}}function O(t,n,o,a=3,f=a/3){const{matrix:e,sum:r}=P(a,f);for(let c=0;c<o;c++)for(let g=0;g<n;g++){let l=0,h=0,I=0;for(let s=-a;s<=a;s++){const M=g+s;if(M>=0&&M<n){const b=(c*n+M)*4;l+=t[b]*e[s+a],h+=t[b+1]*e[s+a],I+=t[b+2]*e[s+a]}}const u=(c*n+g)*4;t[u]=l/r,t[u+1]=h/r,t[u+2]=I/r}for(let c=0;c<n;c++)for(let g=0;g<o;g++){let l=0,h=0,I=0;for(let s=-a;s<=a;s++){const M=g+s;if(M>=0&&M<o){const b=(M*n+c)*4;l+=t[b]*e[s+a],h+=t[b+1]*e[s+a],I+=t[b+2]*e[s+a]}}const u=(g*n+c)*4;t[u]=l/r,t[u+1]=h/r,t[u+2]=I/r}return t}export{O as a,C as b,v as c,P as d,k as g,j as l,w as t};
