class o{constructor({duration:t,iterations:s=1,easing:i=e=>e}={}){this.startTime=Date.now(),this.duration=t,this.iterations=s,this.easing=i}get time(){return Date.now()-this.startTime}get p(){const t=Math.min(this.time/this.duration,this.iterations);return this.isFinished?1:this.easing(t%1)}get isFinished(){return this.time/this.duration>=this.iterations}}class h{constructor({duration:t,iterations:s,easing:i}){this.timingParam={duration:t,iterations:s,easing:i}}animate(t,s){let i=0;const e=new o(this.timingParam);return new Promise(a=>{function n(){s({target:t,frameIndex:i,timing:e})!==!1&&!e.isFinished?requestAnimationFrame(n):a(e),i++}n()})}}export{h as A};
