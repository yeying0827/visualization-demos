import{_ as D,y as g,f as B,z as C,D as p,E as m,H as _,o as v,c as f,b as l,F as w,u as x,B as b,A as F,t as S,p as z,a as E}from"./index-8v8F2D54.js";import{t as k,s as R,b as T,c as I}from"./color-matrix-ThnoXl7S.js";const j=n=>(z("data-v-754cb8d6"),n=n(),E(),n),A=j(()=>l("h3",null,"滤镜函数使用",-1)),H=["onClick"],L={__name:"Filters",setup(n){const y=[{name:"滤镜函数：channel"},{name:"滤镜函数：叠加使用"}],s=g(0),e=g(null);let r;B(()=>{r=e.value.getContext("2d"),h(s.value),C(s,()=>{h(s.value)})});const h=d=>{switch(d){case 0:console.log("case 0"),async function(){const c=await p(b),a=m(c);_(a,({r:t,g:o,b:i,a:u})=>k([t,o,i,u],I({r:1.5,g:.75}))),e.value.width=a.width,e.value.height=a.height,r.putImageData(a,0,0)}();break;case 1:console.log("case 1"),async function(){const c=await p(b),a=m(c);_(a,({r:t,g:o,b:i,a:u})=>k([t,o,i,u],I({r:1.2}),T(1.2),R(1.2))),e.value.width=a.width,e.value.height=a.height,r.putImageData(a,0,0)}();break}};return(d,c)=>(v(),f(w,null,[A,l("div",null,[(v(),f(w,null,x(y,(a,t)=>l("span",{class:F(["filter-type",{active:s.value===t}]),onClick:o=>s.value=t},S(a.name),11,H)),64))]),l("canvas",{ref_key:"canvasRef",ref:e,width:"0",height:"0"},null,512)],64))}},V=D(L,[["__scopeId","data-v-754cb8d6"]]);export{V as default};
