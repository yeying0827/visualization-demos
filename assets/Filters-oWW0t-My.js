import{_ as D,k as g,f as C,l as x,q as m,s as p,u as _,o as v,c as f,b as l,F as w,g as B,m as b,n as F,t as S,p as R,a as T}from"./index-kUdbjN4z.js";import{t as k,s as q,b as z,c as I}from"./color-matrix-ThnoXl7S.js";const E=n=>(R("data-v-754cb8d6"),n=n(),T(),n),L=E(()=>l("h3",null,"滤镜函数使用",-1)),M=["onClick"],N={__name:"Filters",setup(n){const y=[{name:"滤镜函数：channel"},{name:"滤镜函数：叠加使用"}],s=g(0),e=g(null);let r;C(()=>{r=e.value.getContext("2d"),h(s.value),x(s,()=>{h(s.value)})});const h=d=>{switch(d){case 0:console.log("case 0"),async function(){const c=await m(b),a=p(c);_(a,({r:t,g:o,b:i,a:u})=>k([t,o,i,u],I({r:1.5,g:.75}))),e.value.width=a.width,e.value.height=a.height,r.putImageData(a,0,0)}();break;case 1:console.log("case 1"),async function(){const c=await m(b),a=p(c);_(a,({r:t,g:o,b:i,a:u})=>k([t,o,i,u],I({r:1.2}),z(1.2),q(1.2))),e.value.width=a.width,e.value.height=a.height,r.putImageData(a,0,0)}();break}};return(d,c)=>(v(),f(w,null,[L,l("div",null,[(v(),f(w,null,B(y,(a,t)=>l("span",{class:F(["filter-type",{active:s.value===t}]),onClick:o=>s.value=t},S(a.name),11,M)),64))]),l("canvas",{ref_key:"canvasRef",ref:e,width:"0",height:"0"},null,512)],64))}},j=D(N,[["__scopeId","data-v-754cb8d6"]]);export{j as default};
